# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      docker:
        image: docker/compose:1.29.2
        ports:
          - 80:80

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y protobuf-compiler
        python -m pip install --upgrade pip
        pip install -e .[dev]
    - name: Lint with flake8
      run: |
        flake8 .

    - name: Run unit tests
      run: |
        coverage run --source=rcst -m pytest tests/test_world_observer.py
        coverage run --source=rcst --append -m pytest tests/test_goal_observer.py
        coverage run --source=rcst --append -m pytest tests/test_ball_placement_observer.py

    - name: Start Docker Compose services
      run: docker compose -f .docker/consai-grsim-compose.yml up -d

    - name: Wait for game.py to start
      timeout-minutes: 5
      run: |
        CHECK_INTERVAL=10

        until docker top consai 2>/dev/null | grep -q game.py
        do
          echo "Waiting for game.py to start..."
          sleep $CHECK_INTERVAL
        done

        echo "game.py started!"

    - name: Download logger
      run: |
        curl -L https://github.com/RoboCup-SSL/ssl-go-tools/releases/download/v1.5.2/ssl-log-recorder_v1.5.2_linux_amd64 -o ssl-log-recorder
        chmod +x ssl-log-recorder

    - name: Run scenario tests
      run: coverage run --source=rcst --append -m pytest tests/test_scenario_*.py --vision_port=10020 --logging --log_recorder=./ssl-log-recorder

    - name: Get and print logs
      if: always()
      run: docker compose -f .docker/consai-grsim-compose.yml logs

    - name: Clean up Docker Compose services
      if: always()
      run: docker compose -f .docker/consai-grsim-compose.yml down

    - name: Generate coverage report
      run: coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload artifacts
      id: upload-artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: failure-logs
        path: '*.log.gz'

    - name: Comment PR with Artifact URL
      if: always()
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Failure logs: ${{ steps.upload-artifact.outputs.artifact-url }}
